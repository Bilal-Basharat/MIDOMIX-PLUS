<Application x:Class="MidoMixPlus.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:MidoMixPlus"
             StartupUri="MainWindow.xaml">
    <Application.Resources>

        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Light.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Primary/MaterialDesignColor.DeepPurple.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Accent/MaterialDesignColor.Lime.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <!--style for datagrid column header -->
            <Style x:Key="headerColor" TargetType="DataGridColumnHeader">
                <Setter Property="Background" Value="#E26EE5"/>
                <Setter Property="Foreground" Value="#fff"/>
                <Setter Property="FontFamily" Value="Roboto"/>
                <Setter Property="FontSize" Value="18"/>


                <Setter Property="FontWeight" Value="Medium"/>
            </Style>

            <!--style for text boxes-->
            <Style x:Key="textBlock" TargetType="TextBlock">
                <Setter Property="Foreground" Value="#E26EE5"/>
                <Setter Property="FontFamily" Value="Roboto"/>
                <Setter Property="FontSize" Value="22"/>
                <Setter Property="FontWeight" Value="Medium"/>
                <Setter Property="TextWrapping" Value="Wrap"/>
                <Setter Property="Margin" Value="0 10 0 0"/>
            </Style>

            <!--style for input boxes-->
            <Style x:Key="inputBox" TargetType="ComboBox">
                <Setter Property="Foreground" Value="#000"/>
                <Setter Property="Background" Value="#fff"/>
                <Setter Property="FontWeight" Value="SemiBold"/>
                <Setter Property="FontSize" Value="22"/>
                <Setter Property="Height" Value="25"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="Margin" Value="0 10 0 0"/>
            </Style>

            <!--style for year input box-->
            <Style x:Key="inputBoxforYear" TargetType="TextBox">
                <Setter Property="Foreground" Value="#000"/>
                <Setter Property="Background" Value="#fff"/>
                <Setter Property="FontWeight" Value="SemiBold"/>
                <Setter Property="FontSize" Value="22"/>
                <Setter Property="Height" Value="25"/>

                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="Margin" Value="0 10 0 0"/>
            </Style>

            <!--style for Side bar Buttons -->
            <Style x:Key="MaterialDesignFlatButton" TargetType="Button">
                <Setter Property="Background" Value="#7FC7D9" />
                <Setter Property="Foreground" Value="#365486" />
                <Setter Property="Margin" Value="10 0 0 20"/>
                <Setter Property="Width" Value="180" />
                <Setter Property="Height" Value="60" />
                <Setter Property="FontSize" Value="20" />
                <Setter Property="FontFamily" Value="Roboto" />
                <Setter Property="FontWeight" Value="SemiBold" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}" CornerRadius="5" Padding="5">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="#365486" />
                        <Setter Property="Foreground" Value="#7FC7D9" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <!--style for Search and clear Button -->
            <Style x:Key="searchClearButton" TargetType="Button">
                <Setter Property="Background" Value="#E26EE5" />
                <Setter Property="Foreground" Value="#ffffff" />
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Margin" Value="0 10"/>
                <Setter Property="Width" Value="80" />
                <Setter Property="Height" Value="40" />
                <Setter Property="FontSize" Value="20" />
                <Setter Property="FontWeight" Value="SemiBold" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}" CornerRadius="5" Padding="5">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="#c9c9c9" />
                        <Setter Property="Foreground" Value="#161616" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <!--style for Comparison and Advance Search Button -->
            <Style x:Key="advCompButton" TargetType="Button">
                <Setter Property="Background" Value="#E26EE5" />
                <Setter Property="Foreground" Value="#ffffff" />
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Margin" Value="0 10"/>
                <Setter Property="Width" Value="160" />
                <Setter Property="Height" Value="40" />
                <Setter Property="FontSize" Value="20" />
                <Setter Property="FontWeight" Value="SemiBold" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}" CornerRadius="5" Padding="5">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="#c9c9c9" />
                        <Setter Property="Foreground" Value="#161616" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <!-- DataGrid row style -->
            <Style x:Key="DataGridRowStyle1" TargetType="{x:Type DataGridRow}">
                <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
                <Setter Property="SnapsToDevicePixels" Value="true"/>
                <Setter Property="Validation.ErrorTemplate" Value="{x:Null}"/>
                <Setter Property="ValidationErrorTemplate">
                    <Setter.Value>
                        <ControlTemplate>
                            <TextBlock Foreground="Red" Margin="2,0,0,0" Text="!" VerticalAlignment="Center"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type DataGridRow}">
                            <Border x:Name="DGR_Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                <SelectiveScrollingGrid>
                                    <SelectiveScrollingGrid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </SelectiveScrollingGrid.ColumnDefinitions>
                                    <SelectiveScrollingGrid.RowDefinitions>
                                        <RowDefinition Height="*"/>
                                        <RowDefinition Height="Auto"/>
                                    </SelectiveScrollingGrid.RowDefinitions>
                                    <DataGridCellsPresenter Grid.Column="1" ItemsPanel="{TemplateBinding ItemsPanel}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    <DataGridDetailsPresenter Grid.Column="1" Grid.Row="1" SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding AreRowDetailsFrozen, ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical}, Converter={x:Static DataGrid.RowDetailsScrollingConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Visibility="{TemplateBinding DetailsVisibility}"/>
                                    <DataGridRowHeader Grid.RowSpan="2" SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Row}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                </SelectiveScrollingGrid>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsNewItem" Value="True">
                        <Setter Property="Margin" Value="{Binding NewItemMargin, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <!-- DataGrid Column style -->
            <Style x:Key="DataGridColumnHeaderStyle1" TargetType="{x:Type DataGridColumnHeader}">
                <Setter Property="VerticalContentAlignment" Value="Center"/>
            </Style>

        </ResourceDictionary>

    </Application.Resources>
</Application>
